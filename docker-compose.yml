version: '3.8'

services:
  # Bitcoin Core node (regtest)
  bitcoind:
    image: bitcoin/bitcoin-core:25.0
    container_name: runes-lightning-bitcoind
    command: >
      bitcoind
      -regtest
      -server=1
      -rpcuser=bitcoin
      -rpcpassword=bitcoin
      -rpcallowip=0.0.0.0/0
      -rpcbind=0.0.0.0
      -txindex=1
      -blockfilterindex=1
      -peerbloomfilters=1
      -acceptnonstdtxn=0
      -datadir=/bitcoin
    ports:
      - "18443:18443"  # RPC
      - "18444:18444"  # P2P
    volumes:
      - bitcoin_data:/bitcoin
      - ./config/bitcoin.conf:/bitcoin/bitcoin.conf:ro
    networks:
      - runes-lightning-network
    restart: unless-stopped

  # Core Lightning node (Alice)
  lightning-alice:
    image: elementsproject/lightning:latest
    container_name: runes-lightning-alice
    command: >
      lightningd
      --network=regtest
      --bitcoin-rpcuser=bitcoin
      --bitcoin-rpcpassword=bitcoin
      --bitcoin-rpcport=18443
      --bitcoin-rpcip=bitcoind
      --log-level=debug
      --bind-addr=0.0.0.0:9735
      --announce-addr=lightning-alice:9735
      --lightning-dir=/lightning
      --plugin=/plugins/rune-plugin.py
    ports:
      - "9735:9735"  # Lightning P2P
      - "8080:8080"  # REST API
    volumes:
      - lightning_alice_data:/lightning
      - ./plugins:/plugins:ro
      - ./config/lightning-alice.conf:/lightning/config:ro
    depends_on:
      - bitcoind
    networks:
      - runes-lightning-network
    restart: unless-stopped

  # Core Lightning node (Bob)
  lightning-bob:
    image: elementsproject/lightning:latest
    container_name: runes-lightning-bob
    command: >
      lightningd
      --network=regtest
      --bitcoin-rpcuser=bitcoin
      --bitcoin-rpcpassword=bitcoin
      --bitcoin-rpcport=18443
      --bitcoin-rpcip=bitcoind
      --log-level=debug
      --bind-addr=0.0.0.0:9736
      --announce-addr=lightning-bob:9736
      --lightning-dir=/lightning
      --plugin=/plugins/rune-plugin.py
    ports:
      - "9736:9736"  # Lightning P2P
      - "8081:8080"  # REST API
    volumes:
      - lightning_bob_data:/lightning
      - ./plugins:/plugins:ro
      - ./config/lightning-bob.conf:/lightning/config:ro
    depends_on:
      - bitcoind
    networks:
      - runes-lightning-network
    restart: unless-stopped

  # Rune parser service
  rune-parser:
    build:
      context: .
      dockerfile: docker/Dockerfile.rune-parser
    container_name: runes-lightning-parser
    command: python -m rune_parser.server
    ports:
      - "8000:8000"  # API
    volumes:
      - ./tools:/app/tools:ro
      - ./data:/app/data
    depends_on:
      - bitcoind
    networks:
      - runes-lightning-network
    restart: unless-stopped

  # Lightning API gateway
  lightning-gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.gateway
    container_name: runes-lightning-gateway
    command: python -m lightning_gateway.server
    ports:
      - "9000:9000"  # Gateway API
    volumes:
      - ./tools:/app/tools:ro
      - ./config:/app/config:ro
    depends_on:
      - lightning-alice
      - lightning-bob
      - rune-parser
    networks:
      - runes-lightning-network
    restart: unless-stopped

  # Development tools
  dev-tools:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev-tools
    container_name: runes-lightning-dev-tools
    command: tail -f /dev/null  # Keep container running
    volumes:
      - .:/app
      - ./scripts:/app/scripts
      - ./examples:/app/examples
    working_dir: /app
    depends_on:
      - bitcoind
      - lightning-alice
      - lightning-bob
    networks:
      - runes-lightning-network
    restart: unless-stopped

volumes:
  bitcoin_data:
    driver: local
  lightning_alice_data:
    driver: local
  lightning_bob_data:
    driver: local

networks:
  runes-lightning-network:
    driver: bridge 